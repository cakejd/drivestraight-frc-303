import edu.wpi.first.math.controller.PIDController;
import edu.wpi.first.wpilibj2.command.PIDCommand;
public class DriveStraight extends PIDCommand{
    private final double distance;
    public DriveStraight(double distance){
        super(new PIDController(0.1, 0, 0),
         () -> Robot.getDrivebase().getLeftEncoderDistance() - Robot.getDrivebase().getLeftEncoderDistance(),
         0,
        (output) -> Robot.getDrivebase.arcadeDrive(speed,output),
        Robot.getDrivebase());
        getController().enableContinuousInput(-180,180);
        getController().setTolerance(5,0);
        this.distance = distance;

        
        /*
      PIDController controller,
      DoubleSupplier measurementSource,
      DoubleSupplier setpointSource,
      DoubleConsumer useOutput,
      Subsystem... requirements)*/
    }
    public void initialize(){
        Robot.getDrivebase().resetEncoders();
        Robot.getNavX().reset();
    }
    public boolean isFinished(){
        return Robot.Drivebase().getAverageEncoderDistance()>=distance && getController().atSetpoint();
    }
}
